<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.umeng.message.lib"
    android:versionCode="1"
    android:versionName="1.0">

    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_ADDED" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_CHANGED" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_INSTALL" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_REPLACED" />
    <uses-permission android:name="android.permission.RESTART_PACKAGES" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />

    <uses-permission android:name="android.permission.WRITE_SETTINGS" />

    <!--mi-->
    <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />
    <permission
        android:name="${applicationId}.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signatureOrSystem" />

    <!--oppo-->
    <uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <uses-permission android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE" />

    <!--meizu-->

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <!-- 兼容flyme5.0以下版本，魅族内部集成pushSDK必填，不然无法收到消息 -->
    <uses-permission android:name="com.meizu.flyme.push.permission.RECEIVE" />

    <permission
        android:name="${applicationId}.push.permission.MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="${applicationId}.push.permission.MESSAGE" />

    <!-- 兼容flyme3.0配置权限 -->
    <uses-permission android:name="com.meizu.c2dm.permission.RECEIVE" />

    <permission
        android:name="${applicationId}.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="${applicationId}.permission.C2D_MESSAGE" />

<!--    <uses-permission android:name="android.permission.INTERNET" />-->
    <!--VIVO-->
    <uses-permission android:name="com.vivo.notification.permission.BADGE_ICON" />
    <permission
        android:name="${applicationId}.permission.PROCESS_PUSH_MSG"
        android:protectionLevel="signatureOrSystem" />
    <!-- PUSH_PROVIDER and PUSH_WRITE_PROVIDER are both provider registered permissions for the notification switch. -->
    <!-- The SDK's notification bar switch, EMUI 9.x becomes write to the local sp, sharing the file through the provider to the push-rom, which reads the sp file to get the status of the notification bar switch. -->
    <permission
        android:name="${applicationId}.permission.PUSH_PROVIDER"
        android:protectionLevel="signatureOrSystem" />
    <permission
        android:name="${applicationId}.permission.PUSH_WRITE_PROVIDER"
        android:protectionLevel="signatureOrSystem" />

    <uses-permission android:name="${applicationId}.permission.PROCESS_PUSH_MSG" />
    <uses-permission android:name="${applicationId}.permission.PUSH_PROVIDER" />
    <application>

        <service
            android:name="com.taobao.accs.ChannelService"
            android:exported="true"
            android:process=":channel">
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.SERVICE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.ELECTION" />
            </intent-filter>
        </service>

        <service
            android:name="com.taobao.accs.data.MsgDistributeService"
            android:exported="true">
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.RECEIVE" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.taobao.accs.EventReceiver"
            android:process=":channel">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_REMOVED" />
                <data android:scheme="package" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.USER_PRESENT" />
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.taobao.accs.ServiceReceiver"
            android:process=":channel">
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.COMMAND" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.START_FROM_AGOO" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.taobao.accs.internal.AccsJobService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":channel"/>

        <service
            android:name="com.taobao.accs.ChannelService$KernelService"
            android:process=":channel" />

        <service
            android:name="org.android.agoo.accs.AgooService"
            android:exported="true">
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.RECEIVE" />
            </intent-filter>
        </service>

        <service
            android:name="com.umeng.message.UmengIntentService"
            android:exported="true"
            android:process=":channel">
            <intent-filter>
                <action android:name="org.agoo.android.intent.action.RECEIVE" />
            </intent-filter>
        </service>

        <service
            android:name="com.umeng.message.XiaomiIntentService"
            android:exported="true"
            android:process=":channel">
            <intent-filter>
                <action android:name="org.agoo.android.intent.action.RECEIVE" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.taobao.agoo.AgooCommondReceiver"
            android:exported="true"
            android:process=":channel">
            <intent-filter>
                <action android:name="${applicationId}.intent.action.COMMAND" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_REMOVED" />
                <data android:scheme="package" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.umeng.message.UmengMessageIntentReceiverService"
            android:exported="true"
            android:process=":channel">
            <intent-filter>
                <action android:name="org.android.agoo.client.MessageReceiverService" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.umeng.message.NotificationProxyBroadcastReceiver"
            android:exported="false" />

        <service
            android:name="com.umeng.message.UmengMessageCallbackHandlerService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:exported="false">
            <intent-filter>
                <action android:name="com.umeng.messge.registercallback.action" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.umeng.message.enablecallback.action" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.umeng.message.disablecallback.action" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.umeng.message.message.handler.action" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.umeng.message.message.sendmessage.action" />
            </intent-filter>
        </service>

        <service
            android:name="com.umeng.message.UmengDownloadResourceService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:exported="false" />

        <provider
            android:name="com.umeng.message.provider.MessageProvider"
            android:authorities="${applicationId}.umeng.message"
            android:exported="false">
            <grant-uri-permission android:pathPattern=".*" />
        </provider>

        <!--小米推送-->
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice" />
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice" /> <!-- 注：此service必须在3.0.1版本以后（包括3.0.1版本）加入 -->
        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" /> <!-- 注：此service必须在2.2.5版本以后（包括2.2.5版本）加入 -->
        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice" >
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="org.android.agoo.xiaomi.MiPushBroadcastReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>

        <!--华为推送-->

        <service
            android:name="com.huawei.hms.support.api.push.service.HmsMsgService"
            android:enabled="true"
            android:exported="true"
            android:process=":pushservice" >
            <intent-filter>
                <action android:name="com.huawei.push.msg.NOTIFY_MSG" />
                <action android:name="com.huawei.push.msg.PASSBY_MSG" />
            </intent-filter>
        </service>
        <service
            android:name="org.android.agoo.huawei.HuaweiPushMessageService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!--
             接入HMSSDK 需要注册的appid参数。value的值中“1034075”用实际申请的appid替换，来源于开发者联盟网站应用的权益详情。
            格式 android:value="appid=xxxxxx"
            Access HMSSDK need to register AppID parameters. Value "1034075" is replaced with the actual application APPID, derived from the Developer affiliate website application.
            Format android:value= "appid=xxxxxx"
        -->
            <meta-data
            android:name="com.huawei.hms.client.appid"
            android:value="appid=103168931" />
<!--

        &lt;!&ndash; 使用 HMSAgent 代码接入HMSSDK 需要注册的activity | Use hmsagent code to access HMSSDK activity that requires registration &ndash;&gt;
        <activity
            android:name="com.huawei.android.hms.agent.common.HMSAgentActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        &lt;!&ndash; 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered &ndash;&gt;
        <activity
            android:name="com.huawei.hms.activity.BridgeActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        &lt;!&ndash; 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered &ndash;&gt;
        <activity
            android:name="com.huawei.updatesdk.service.otaupdate.AppUpdateActivity"
            android:configChanges="orientation|screenSize"
            android:exported="false"
            android:theme="@style/upsdkDlDialog" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent.NoTitleBar" />
        </activity>

        &lt;!&ndash; 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered &ndash;&gt;
        <activity
            android:name="com.huawei.updatesdk.support.pm.PackageInstallerActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:exported="false"
            android:theme="@style/upsdkDlDialog" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        &lt;!&ndash;
             接入HMSSDK PUSH模块需要注册，第三方相关 :接收Push消息（注册、Push消息、Push连接状态）广播，
                此receiver类需要开发者自己创建并继承com.huawei.hms.support.api.push.PushReceiver类，
                参考示例代码中的类：com.huawei.hmsagent.HuaweiPushRevicer
            Access to the HMSSDK push module requires registration:
	            Receive push message (registration, push message, push connection state) broadcast.
	            This receiver class requires the developer to create and inherit the com.huawei.hms.support.api.push.PushReceiver class.
	            Reference to class in sample code: Com.huawei.hmsagent.HuaweiPushRevicer
        &ndash;&gt;
        <receiver android:name="org.android.agoo.huawei.HuaweiPushReceiver" >
            <intent-filter>

                &lt;!&ndash; 必须,用于接收token | Must， for receiving token &ndash;&gt;
                <action android:name="com.huawei.android.push.intent.REGISTRATION" />
                &lt;!&ndash; 必须，用于接收消息 | Must， used to receive messages &ndash;&gt;
                <action android:name="com.huawei.android.push.intent.RECEIVE" />
                &lt;!&ndash; 可选，用于点击通知栏或通知栏上的按钮后触发onEvent回调 | Optional, click the button on the notification bar or the notification bar to trigger the onevent callback &ndash;&gt;
                <action android:name="com.huawei.android.push.intent.CLICK" />
                &lt;!&ndash; 可选，查看push通道是否连接，不查看则不需要 | Optional, query whether the push channel is connected or not &ndash;&gt;
                <action android:name="com.huawei.intent.action.PUSH_STATE" />
            </intent-filter>
        </receiver>

        &lt;!&ndash; 接入HMSSDK 需要注册的应用下载服务 | Access HMSSDK need to register app download service &ndash;&gt;
        <service
            android:name="com.huawei.updatesdk.service.deamon.download.DownloadService"
            android:exported="false" />-->

        <receiver
            android:name="com.huawei.hms.support.api.push.PushMsgReceiver"
            android:directBootAware="true"
            android:permission="${applicationId}.permission.PROCESS_PUSH_MSG" >
            <intent-filter>

                <!-- Mandatory, be used to receive notification bar message click event. -->
                <action android:name="com.huawei.intent.action.PUSH_DELAY_NOTIFY" />
                <!-- Optional, compatible with old huawei phones. -->
                <action android:name="com.huawei.intent.action.PUSH" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.huawei.hms.support.api.push.PushReceiver"
            android:directBootAware="true"
            android:permission="${applicationId}.permission.PROCESS_PUSH_MSG" >
            <intent-filter>

                <!-- Mandatory, be used to receive tokens. -->
                <action android:name="com.huawei.android.push.intent.REGISTRATION" />
                <!-- Mandatory, be used to receive messages. -->
                <action android:name="com.huawei.android.push.intent.RECEIVE" />
            </intent-filter>
        </receiver>


        <provider
            android:name="com.huawei.hms.support.api.push.PushProvider"
            android:authorities="${applicationId}.huawei.push.provider"
            android:exported="true"
            android:permission="${applicationId}.permission.PUSH_PROVIDER"
            android:readPermission="${applicationId}.permission.PUSH_PROVIDER"
            android:writePermission="${applicationId}.permission.PUSH_WRITE_PROVIDER" />

        <meta-data
            android:name="com.huawei.hms.client.service.name:push"
            android:value="push:5.0.1.300" />
        <meta-data
            android:name="com.huawei.hms.min_api_level:push:push"
            android:value="1" />
        <!--oppo-->
<!--        <service-->
<!--            android:name="com.heytap.msp.push.service.CompatibleDataMessageCallbackService"-->
<!--            android:permission="com.coloros.mcs.permission.SEND_MCS_MESSAGE" >-->
<!--            <intent-filter>-->
<!--                <action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE" />-->
<!--            </intent-filter>-->
<!--        </service> &lt;!&ndash; 兼容Q以下版本 &ndash;&gt;-->

<!--        <service-->
<!--            android:name="com.heytap.msp.push.service.DataMessageCallbackService"-->
<!--            android:permission="com.heytap.mcs.permission.SEND_PUSH_MESSAGE" >-->
<!--            <intent-filter>-->
<!--                <action android:name="com.heytap.mcs.action.RECEIVE_MCS_MESSAGE" />-->
<!--                <action android:name="com.heytap.msp.push.RECEIVE_MCS_MESSAGE" />-->
<!--            </intent-filter>-->
<!--        </service> &lt;!&ndash; 兼容Q版本 &ndash;&gt;-->
        <service
            android:name="com.heytap.mcssdk.PushService"
            android:permission="com.coloros.mcs.permission.SEND_MCS_MESSAGE" >
            <intent-filter>
                <action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service>
        <service
            android:name="com.heytap.mcssdk.AppPushService"
            android:permission="com.heytap.mcs.permission.SEND_MCS_MESSAGE" >
            <intent-filter>
                <action android:name="com.heytap.mcs.action.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service>
        <!--VIVO-->
        <service
            android:name="com.vivo.push.sdk.service.CommandClientService"
            android:exported="true" />

        <activity
            android:name="com.vivo.push.sdk.LinkProxyClientActivity"
            android:exported="true"
            android:screenOrientation="portrait"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <!-- push应用定义消息receiver声明 -->
        <receiver android:name="org.android.agoo.vivo.PushMessageReceiverImpl" >
            <intent-filter>
                <!-- 接收push消息 -->
                <action android:name="com.vivo.pushclient.action.RECEIVE" />
            </intent-filter>
        </receiver>

        <!--vivo push参数声明 -->
        <!-- vivo start-->
        <meta-data
            android:name="com.vivo.push.api_key"
            android:value="5916df6fe6944f6e5efb673df3585657" />
        <meta-data
            android:name="com.vivo.push.app_id"
            android:value="104966131" />
        <!-- VIVO end-->

        <!--meizu-->

        <service
            android:name="com.meizu.cloud.pushsdk.NotificationService"
            android:exported="true" />

        <receiver
            android:name="com.meizu.cloud.pushsdk.SystemReceiver"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.meizu.cloud.pushservice.action.PUSH_SERVICE_START" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <!--魅族push应用定义消息receiver声明 -->
        <receiver android:name="com.jmhy.sdk.push.MeizuTestReceiver">
            <intent-filter>
                <!-- 接收push消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <!-- 接收register消息 -->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <!-- 接收unregister消息-->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
                <!-- 兼容低版本Flyme3推送服务配置 -->
                <action android:name="com.meizu.c2dm.intent.REGISTRATION" />
                <action android:name="com.meizu.c2dm.intent.RECEIVE" />
                <category android:name="${applicationId}"></category>
            </intent-filter>
        </receiver>


        <!-- 自定-->
        <meta-data
            android:name="umeng_appKey"
            android:value="umeng_appKey=5f810b5d80455950e4a453b3" />
        <meta-data
            android:name="umeng_messageSecret"
            android:value="umeng_messageSecret=93a1996ee6e514cce6655eac0da83342" />
        <meta-data
            android:name="xiaomi_id"
            android:value="xiaomi_id=2882303761518747722" />
        <meta-data
            android:name="xiaomi_key"
            android:value="xiaomi_key=5871874773722" />
        <meta-data
            android:name="oppo_key"
            android:value="oppo_key=5f9d639e101341fa87412c1f92979876" />
        <meta-data
            android:name="oppo_secret"
            android:value="oppo_secret=49ba2e0318d34d2d8eb3a7232a399228" />
        <meta-data
            android:name="meizu_appId"
            android:value="meizu_appId=135767" />
        <meta-data
            android:name="meizu_appKey"
            android:value="meizu_appKey=f4d34244253b4be5b10eaf11c11b4745" />
        <!--推送启动类-->
        <activity
            android:name="com.jmhy.sdk.activity.MipushTestActivity"
            android:launchMode="singleTask"
            android:exported="true" />
    </application>

</manifest>